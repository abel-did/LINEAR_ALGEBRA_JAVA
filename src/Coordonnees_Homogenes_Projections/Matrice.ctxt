#BlueJ class context
comment0.target=Matrice
comment0.text=\r\n\ Classe\ Matrice\r\n\r\n\ @author\ DIDOUH\ Abel\r\n\ @version\ 24/10/2022\r\n
comment1.params=pLigne\ pColonne
comment1.target=Matrice(int,\ int)
comment1.text=\r\n\ Constructeur\r\n
comment10.params=
comment10.target=void\ setSymetrieCentrale()
comment10.text=\r\n\ Procedure\ sym\u00E9trie\ centrale\r\n
comment11.params=
comment11.target=void\ setReflexionOx()
comment11.text=\r\n\ Procedure\ R\u00E9flexion\ 2D\ \r\n
comment12.params=
comment12.target=void\ setReflexionOxOy()
comment12.text=\r\n\ Procedure\ Reflexion\ 3D\r\n
comment13.params=alpha
comment13.target=void\ setRotation2d(double)
comment13.text=\r\n\ Procedure\ Rotation\ 2D\r\n
comment14.params=alpha
comment14.target=void\ setRotation3dOx(double)
comment14.text=\r\n\ Procedure\ Rotation\ 3D\r\n
comment15.params=pColonne
comment15.target=Vecteur\ getVecteurColonne(int)
comment15.text=\r\n\ Methode\ publique\ getVecteurColonne\r\n
comment16.params=pMatrice
comment16.target=Matrice\ produitMatriciel(Matrice)
comment16.text=\r\n\ Une\ fonction\ publique\ produitMatriciel\ \u00E0\ un\ param\u00E8tre\ de\ type\ Matrice\r\n
comment17.params=pK
comment17.target=void\ setHomothetieHomogene3d(double)
comment17.text=\r\n\ Proc\u00E9dure\ publique\ setHomothetieHomogene3d\ \u00E0\ un\ param\u00E8tre\ k\ de\ type\ \r\n\ double\ qui\ modifie\ l'instance\ courante\ de\ la\ classe\ Matrice\ afin\ qu'elle\ \r\n\ corresponde\ \u00E0\ l'homoth\u00E9tie\ de\ rapport\ k\ dans\ l'espace\ 3d\ homog\u00E8ne\r\n
comment18.params=pT
comment18.target=void\ setTranslationHomogene3d(Vecteur)
comment18.text=\r\n\ \ Proc\u00E9dure\ publique\ setTranslationHomogene3d\ \u00E0\ un\ param\u00E8tre\ t\ de\ \r\n\ \ type\ Vecteur\ qui\ modifie\ l'instance\ courante\ de\ la\ classe\ Matrice\ \r\n\ \ afin\ qu'elle\ corresponde\ \u00E0\ la\ translation\ de\ vecteur\ t\ dans\ \r\n\ \ l'espace\ 3d\ homog\u00E8ne\r\n
comment19.params=pAlpha
comment19.target=void\ setRotationOxHomogene3d(double)
comment19.text=\r\n\ \ Proc\u00E9dure\ publique\ setRotationOxHomogene3d\ \u00E0\ un\ param\u00E8tre\ alpha\ de\ type\ \r\n\ \ double\ qui\ modifie\ l'instance\ courante\ de\ la\ classe\ Matrice\ afin\ qu'elle\ \r\n\ \ corresponde\ \u00E0\ la\ rotation\ d'angle\ alpha\ radian\ autour\ du\ vecteur\ \r\n\ \ (\ 1,\ 0,\ 0\ )dans\ l'espace\ 3d\ homog\u00E8ne\r\n
comment2.params=pLigne\ pColonne
comment2.target=double\ getCoefficient(int,\ int)
comment2.text=\r\n\ Accesseur\r\n
comment20.params=pAlpha
comment20.target=void\ setRotationOyHomogene3d(double)
comment20.text=\r\n\ Proc\u00E9dure\ publique\ setRotationOyHomogene3d\ \u00E0\ un\ param\u00E8tre\ alpha\ de\ \r\n\ type\ double\ qui\ modifie\ l'instance\ courante\ de\ la\ classe\ Matrice\ \r\n\ afin\ qu'elle\ corresponde\ \u00E0\ la\ rotation\ d'angle\ alpha\ radian\ autour\ \r\n\ du\ vecteur\ (\ 0,\ 1,\ 0\ )dans\ l'espace\ 3d\ homog\u00E8ne\r\n
comment21.params=pAlpha
comment21.target=void\ setRotationOzHomogene3d(double)
comment21.text=\r\n\ Proc\u00E9dure\ publique\ setRotationOzHomogene3d\ \u00E0\ un\ param\u00E8tre\ alpha\ de\ type\ \r\n\ double\ qui\ modifie\ l'instance\ courante\ de\ la\ classe\ Matrice\ afin\ \r\n\ qu'elle\ corresponde\ \u00E0\ la\ rotation\ d'angle\ alpha\ radian\ autour\ \r\n\ du\ vecteur\ (0,0,1)dans\ l'espace\ 3d\ homog\u00E8ne\ \r\n
comment22.params=
comment22.target=void\ setProjectionOrthoOxyHomogene3d()
comment22.text=\r\n\ Proc\u00E9dure\ publique\ setProjectionOrthoOxyHomogene3d\ \r\n\ sans\ param\u00E8tre\ qui\ modifie\ l'instance\ courante\ de\ la\ classe\ Matrice\ \r\n\ afin\ qu'elle\ corresponde\ \u00E0\ la\ projection\ orthogonale\ de\ l'espace\ 3d\ \r\n\ homog\u00E8ne\ dans\ l'espace\ 2d\ homog\u00E8ne\ correspondant\ au\ plan\ d\u00E9fini\ par\ \r\n\ les\ vecteurs\ (\ 1,\ 0,\ 0\ )\ et\ (\ 0,\ 1,\ 0\ )\r\n
comment23.params=
comment23.target=void\ setProjectionOrthoOxzHomogene3d()
comment23.text=\r\n\ Proc\u00E9dure\ publique\ setProjectionOrthoOxzHomogene3d\r\n
comment24.params=
comment24.target=void\ setProjectionOrthoOyzHomogene3d()
comment24.text=\r\n\ Proc\u00E9dure\ publique\ setProjectionOrthoOyzHomogene3d\r\n
comment25.params=pScalaire
comment25.target=void\ setProjectionPerspectiveOxyHomogene3d(double)
comment25.text=\r\n\ Proc\u00E9dure\ publique\ setProjectionPerspectiveOxyHomogene3d\r\n
comment3.params=
comment3.target=int\ getNbColonnes()
comment4.params=
comment4.target=int\ getNbLignes()
comment5.params=pLigne\ pColonne\ pCoord
comment5.target=void\ setCoefficient(int,\ int,\ double)
comment5.text=\r\n\ Modificateur\r\n\ \r\n
comment6.params=pLigne
comment6.target=Vecteur\ getVecteurLigne(int)
comment6.text=\r\n\ Methode\ getVecteurLigne\r\n
comment7.params=pVecteur
comment7.target=Vecteur\ multiplicationVectorielle(Vecteur)
comment7.text=\r\n\ Multiplication\ Vectorielle\r\n
comment8.params=
comment8.target=void\ setIdentite()
comment8.text=\r\n\ Procedure\ identite\r\n
comment9.params=k
comment9.target=void\ setHomothetie(double)
comment9.text=\r\n\ Procedure\ homothetie\r\n
numComments=26
