#BlueJ class context
comment0.target=CryptoText3D
comment0.text=\r\n\ \r\n\ Classe\ CryptoText3D\r\n\ @author\ \r\n\ @version\ 0.1\r\n
comment1.params=
comment1.target=CryptoText3D()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ CryptoText3D\r\n
comment2.params=u\ v
comment2.target=void\ deplacementObservateur(double,\ double)
comment2.text=\r\n\ Procedure\ appelee\ lorsque\ la\ souris\ bouge.\ Les\ coordonnees\ de\ la\ souris\ \r\n\ sont\ donnees\ sous\ forme\ de\ coordonnees\ geographiques\:\ c-a-d\ longitude\ +\ latitude\r\n\ o\u00F9\ on\ consid\u00E8re\ que\ l'espace\ de\ la\ fen\u00EAtre\ correspond\ \u00E0\ une\ demi-sph\u00E8re.\r\n\ \r\n\ En\ d'autres\ termes,\ lorsque\ la\ souris\ se\ trouve\ en\ haut\ (resp.\ en\ bas)\ de\ l'\u00E9cran,\ \r\n\ elle\ est\ au\ pole\ nord\ (resp.\ pole\ sud).\ Un\ d\u00E9placement\ vers\ la\ gauche\ (resp.\ a\ droite)\ \r\n\ de\ l'\u00E9cran\ correspond\ \u00E0\ un\ d\u00E9placement\ vers\ l'ouest\ (resp.\ l'est).\r\n\ \r\n\ Les\ coordonnees\ des\ quatre\ coin\ de\ l'ecran\ sont\:\r\n\ \ -\ coin\ sup\u00E9rieur\ gauche\ \:\ (-pi/2,pi/2)\r\n\ \ -\ coin\ sup\u00E9rieur\ droit\ \:\ (pi/2,pi/2)\r\n\ \ -\ coin\ inf\u00E9rieur\ gauche\ \:\ (-pi/2,-pi/2)\r\n\ \ -\ coin\ inf\u00E9rieur\ droit\ \:\ (pi/2,-pi/2)\r\n\ \r\n\ @param\ u\ longitude\ comprise\ entre\ -pi/2\ et\ pi/2\ (correspond\ a\ la\ position\ en\ x\ sur\ la\ fenetre)\r\n\ @param\ v\ latitude\ comprise\ entre\ -pi/2\ et\ pi/2\ (correspond\ a\ la\ position\ en\ y\ sur\ la\ fenetre)\r\n
comment3.params=pv
comment3.target=Vecteur\ deplacementAleatoire(Vecteur)
comment3.text=\r\n\ D\u00E9place\ al\u00E9toirement\ le\ vecteur\ selon\ sa\ ligne\ de\ perspective\r\n\ @param\ pv\ Vecteur\ \u00E0\ transformer\r\n\ @return\ nouveau\ vecteur\ al\u00E9atoir\ sur\ la\ ligne\ de\ perspective\ de\ pv\r\n
comment4.params=pVecteurs
comment4.target=Vecteur[]\ cryptage(Vecteur[])
comment4.text=\r\n\ La\ fonction\ de\ cryptage\ prend\ en\ param\u00E8tre\ un\ objet\ 3D\ et\ renvoie\ une\ version\ alt\u00E9r\u00E9e\ de\ cette\ objet.\r\n\ @param\ pVecteurs\ tableau\ de\ vecteurs\ \u00E0\ crypter\r\n\ @return\ tableau\ de\ vecteurs\ crypt\u00E9s\r\n
comment5.params=obj
comment5.target=void\ dessiner(Vecteur[])
comment5.text=\r\n\ Dessine\ l'objet\ 3D\ stock\u00E9s\ dans\ un\ tableau\ de\ vecteur\r\n\ @param\ obj\ coordonn\u00E9es\ des\ points\ des\ segments\r\n
comment6.params=pVecteurs\ pTransformation
comment6.target=Vecteur[]\ getTransformee(Vecteur[],\ Matrice)
comment6.text=\r\n\ Applique\ la\ transformation\ lin\u00E9aire\ \u00E0\ l'ensemble\ des\ vecteurs\ du\ tableau\ \r\n\ et\ met\ le\ r\u00E9sultat\ dans\ un\ nouveau\ tableau\ de\ vecteurs\r\n\ @param\ pVecteurs\ \:\ tableau\ de\ Vecteur\ \u00E0\ transformer\r\n\ @param\ pTransformation\ \:\ transformation\ lin\u00E9aire\ \u00E0\ appliquer\r\n\ @return\ tableau\ de\ vecteurs\ contenant\ les\ vecteurs\ transform\u00E9s\r\n
comment7.params=text
comment7.target=Vecteur[]\ creerTexte(java.lang.String)
comment7.text=\r\n\ Cr\u00E9\u00E9\ un\ objet\ 3D\ repr\u00E9sentant\ un\ texte\r\n\ @param\ text\ \:\ texte\ \u00E0\ transformer\r\n\ @return\ tableau\ contenant\ les\ extr\u00E9mit\u00E9s\ des\ segments\ composants\ l'objet\ 3D\r\n
comment8.params=scene\ pSommets
comment8.target=void\ dessinerTexte(Scene,\ Vecteur[])
comment8.text=\r\n\ Dessine\ le\ texte\ dont\ les\ sommets\ sont\ dans\ le\ tableau\ de\ Vecteur\ sur\ le\ Plan\r\n\ @param\ pPlan\ \:\ plan\ ou\ effectuer\ le\ dessin\r\n\ @param\ pSommets\ \:\ sommets\ du\ texte\r\n
numComments=9
